#!/usr/bin/env python
import sys

gg = {}

def rdline(f):
	n = f.readline()
	return (None if (n==None) else n.rstrip("\n"))

def merge_group_pairs(g, glike):
	"""This merges glike with g and glike.opposite with g.opposite"""
	if g is glike:
	   return False

	for x in glike['mems']:
		g.add(x)
		gg[x] = g

	gopp = glike['opp']
	for x in gopp['mems']:
		gopp.add(x)
		gg[x] = gopp

	return True

def group_em(f):
	n = rdline(f)
	if n == None:
		return None
	n = int(n)
	for	i in range(1,n):
		accuser_line = rdline(f)
		accuser_name = accuser_line.rstrip("0123456789")
		n_accused = int(accuser_line[len(accuser_name):])
		accuser_name = accuser_name.strip()
		seen = accuser_name in gg.keys()
		cset2 = seen and gg[accuser_name]["opp"]["mems"] or set()
		for x in range(1, n_accused):
			name = rdline(f)
			if name in gg.keys():
				if not seen:
					accuser_grp = gg[name]['opp']
					accuser_grp['mems'].add(accuser_name)
					gg[accuser_name] = accuser_grp
					seen = True
				and cset2 is not gg[name]['mems']:
				gg[name]["mems"].update(cset2)
				cset2 = gg[name]["mems"]
				gg[name]["opp"]["mems"].update(accuser_name)
				seen = True
			cset2.add(name)
		if not seen:
			cg1 = {"opp":None, "mems":set([accuser_name])}
			cg2 = {"opp":cg1, "mems":cset2}
			cg1["opp"] = cg2
			gg[accuser_name] = cg1
			for x in 
			

if __name__ == "__main__":
	group_em(sys.stdin)


